/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package so_proyecto1;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

/**
 * /**
 *
 * @author luism
 */
public class window_principal extends javax.swing.JFrame {

    /**
     * Creates new form window_principal
     */
    public window_principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        b_ejecutar = new javax.swing.JButton();
        b_paso = new javax.swing.JButton();
        b_limpiar = new javax.swing.JButton();
        b_estad = new javax.swing.JButton();
        b_salir = new javax.swing.JButton();
        b_open_archivo = new javax.swing.JButton();
        jButtonCambiarMemorias = new javax.swing.JButton();
        jButtonConfigurar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCPU = new javax.swing.JTable();
        jLabelProgramas = new javax.swing.JLabel();
        jLabelMemoriaSecundaria = new javax.swing.JLabel();
        jLabelMemoriaPrincipal = new javax.swing.JLabel();
        jLabelPantalla = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableProgramas = new javax.swing.JTable();
        jLabelBCPActual = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaMemorioPrimaria = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaMemorioSecundaria = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextAreaBCP = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextAreaPantalla = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(200, 200));
        setUndecorated(true);
        setResizable(false);

        background.setBackground(new java.awt.Color(204, 204, 255));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setName(""); // NOI18N
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        background.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 20, 30));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setName("SSSSSSSS"); // NOI18N

        b_ejecutar.setText("Ejecutar");
        b_ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_ejecutarActionPerformed(evt);
            }
        });

        b_paso.setText("Paso a Paso");
        b_paso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_pasoActionPerformed(evt);
            }
        });

        b_limpiar.setText("Limpiar");
        b_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_limpiarActionPerformed(evt);
            }
        });

        b_estad.setText("Estadisticas");
        b_estad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_estadActionPerformed(evt);
            }
        });

        b_salir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        b_salir.setForeground(new java.awt.Color(204, 0, 0));
        b_salir.setText("X");
        b_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salirActionPerformed(evt);
            }
        });

        b_open_archivo.setText("Cargar Archivos");
        b_open_archivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_open_archivoActionPerformed(evt);
            }
        });

        jButtonCambiarMemorias.setText("Cambiar Memorias");
        jButtonCambiarMemorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCambiarMemoriasActionPerformed(evt);
            }
        });

        jButtonConfigurar.setText("Configurar");
        jButtonConfigurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfigurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b_ejecutar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_paso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_limpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_estad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b_open_archivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonCambiarMemorias)
                .addGap(18, 18, 18)
                .addComponent(jButtonConfigurar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 474, Short.MAX_VALUE)
                .addComponent(b_salir))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_estad)
                    .addComponent(b_limpiar)
                    .addComponent(b_paso)
                    .addComponent(b_ejecutar)
                    .addComponent(b_salir)
                    .addComponent(b_open_archivo)
                    .addComponent(jButtonCambiarMemorias)
                    .addComponent(jButtonConfigurar))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        background.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 30));

        jTableCPU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableCPU);

        background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 1170, 130));

        jLabelProgramas.setBackground(new java.awt.Color(102, 255, 51));
        jLabelProgramas.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabelProgramas.setForeground(new java.awt.Color(23, 16, 19));
        jLabelProgramas.setText("Programas");
        background.add(jLabelProgramas, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, -1));

        jLabelMemoriaSecundaria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelMemoriaSecundaria.setText("Memoria Secundaria");
        background.add(jLabelMemoriaSecundaria, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 60, -1, -1));

        jLabelMemoriaPrincipal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelMemoriaPrincipal.setText("Memoria Primaria");
        background.add(jLabelMemoriaPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 60, -1, -1));

        jLabelPantalla.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabelPantalla.setText("Pantalla ");
        background.add(jLabelPantalla, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        jTableProgramas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Programa", "Nombre", "Estado"
            }
        ));
        jTableProgramas.setEnabled(false);
        jScrollPane8.setViewportView(jTableProgramas);

        background.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 210, 260));

        jLabelBCPActual.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabelBCPActual.setText("BCP Actual");
        background.add(jLabelBCPActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, -1, -1));

        jTextAreaMemorioPrimaria.setEditable(false);
        jTextAreaMemorioPrimaria.setColumns(20);
        jTextAreaMemorioPrimaria.setRows(5);
        jScrollPane3.setViewportView(jTextAreaMemorioPrimaria);

        background.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, 198, 350));

        jTextAreaMemorioSecundaria.setColumns(20);
        jTextAreaMemorioSecundaria.setRows(5);
        jScrollPane2.setViewportView(jTextAreaMemorioSecundaria);

        background.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 80, 188, 350));

        jTextAreaBCP.setEditable(false);
        jTextAreaBCP.setColumns(20);
        jTextAreaBCP.setRows(5);
        jScrollPane10.setViewportView(jTextAreaBCP);

        background.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, 178, 260));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo_tec.jpg"))); // NOI18N
        background.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, -1, 100));

        jTextAreaPantalla.setColumns(20);
        jTextAreaPantalla.setRows(5);
        jTextAreaPantalla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaPantallaKeyEnterPressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTextAreaPantalla);

        background.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 318, 348));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/circuit.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        background.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 570));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        background.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_open_archivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_open_archivoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        //String[] complete = {parts[1], parts[1], parts[1], bin};
        ArrayList<String> listLines = new ArrayList<>();
        //listLines.add(complete);
        fileChooser.setMultiSelectionEnabled(true); // Permitir la selección múltiple de archivos
        int result = fileChooser.showOpenDialog(null);
        //   
        if (result == JFileChooser.APPROVE_OPTION) {
            File[] selectedFiles = fileChooser.getSelectedFiles();
            int cantArchivos = selectedFiles.length;
            for (File file : selectedFiles) {// repite por cada archivo en File para leerlos individualmente
                try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                    listLines.clear();
                    cantArchivos--;
                    String line;
                    listLines.add(file.getName()); //al inicio agregamos el nombre del archivo para diferenciarlo 
                    while ((line = reader.readLine()) != null) {
                        line = line.replaceAll(",", "");
                        listLines.add(line);
                    }
                    if (cantArchivos != 0) {
                        SO_Proyecto1.guardarProgramasEnMemoriaSecundaria(listLines, false);
                    } else {
                        SO_Proyecto1.guardarProgramasEnMemoriaSecundaria(listLines, true);
                    }
                    //
                    // meterlo a un BCP con su alcance de cantArchivos de listLines 

                } catch (IOException ex) {
                    ex.printStackTrace();
                    //textArea.append("Error al leer el archivo: " + file.getName() + "\n");
                }
            }
        }
    }//GEN-LAST:event_b_open_archivoActionPerformed

    private void b_ejecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ejecutarActionPerformed
        SO_Proyecto1.ejecutar(2);
    }//GEN-LAST:event_b_ejecutarActionPerformed

    private void jTextAreaPantallaKeyEnterPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaPantallaKeyEnterPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Obtener el texto actual del JTextArea// Dividir el texto en líneas// Obtener la última línea
            String textoPantalla = jTextAreaPantalla.getText();
            String[] lineas = textoPantalla.split("\n");
            String ultimaLinea = lineas[lineas.length - 1];
            System.out.println("Ingreso por teclado: " + ultimaLinea);
            setPantalla("");
            SO_Proyecto1.guardarDx(ultimaLinea);
        }
    }//GEN-LAST:event_jTextAreaPantallaKeyEnterPressed

    private void b_pasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_pasoActionPerformed
        SO_Proyecto1.ejecutar(1);
    }//GEN-LAST:event_b_pasoActionPerformed

    private void b_estadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_estadActionPerformed
        SO_Proyecto1.cargarGraficosEstadisticas();
    }//GEN-LAST:event_b_estadActionPerformed

    private void b_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salirActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_b_salirActionPerformed

    private void b_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_limpiarActionPerformed

    }//GEN-LAST:event_b_limpiarActionPerformed

    private void jButtonCambiarMemoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCambiarMemoriasActionPerformed
        String m1 = JOptionPane.showInputDialog("Ingrese el tamaño de la memoria principal:");

        // Ventana emergente para ingresar el segundo valor
        String m2 = JOptionPane.showInputDialog("Ingrese el tamaño de la memoria secundaria:");

        try {
            // Intenta convertir los valores ingresados a números enteros
            int numero1 = Integer.parseInt(m1);
            int numero2 = Integer.parseInt(m2);
            System.out.println("tamaño de la memoria principal: " + numero1);
            System.out.println("Tamaño de la memoria secundaria: " + numero2);
            SO_Proyecto1.modificarMemoriaPrincipal(numero1);
            SO_Proyecto1.modificarMemoriaSecundaria(numero2);
        } catch (NumberFormatException e) {
            // Si no se ingresaron valores válidos, muestra un mensaje de error
            JOptionPane.showMessageDialog(null, "Ingreso no válido. Debe ingresar dos números enteros.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonCambiarMemoriasActionPerformed
String[] opciones = {"FCFS", "SRT", "SJF", "RR", "HRRN"};
int eleccion;
    private void jButtonConfigurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfigurarActionPerformed
        // Crear un arreglo con los elementos del menú
         

        // Mostrar un cuadro de diálogo para que el usuario elija una opción del menú
        eleccion = JOptionPane.showOptionDialog(null, "Seleccione una algoritmo para la administracion del CPU:", "Menú", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

        if (eleccion != -1) {
            // El usuario eligió una opción
            System.out.println("Opción elegida: " + opciones[eleccion]);
            SO_Proyecto1.cambiarAlgoritmo(opciones[eleccion]);
        } else {
            // El usuario cerró el cuadro de diálogo sin seleccionar una opción
            System.out.println("Ninguna opción seleccionada.");
        }
        
        
        String m2 = JOptionPane.showInputDialog("Ingrese la Cantidad de CPUS (1-4):");

        try {
            // Intenta convertir los valores ingresados a números enteros
            
            int numero2 = Integer.parseInt(m2);
           
            System.out.println("Tamaño de Cpus: " + numero2);
            
            SO_Proyecto1.agregarCPUs(numero2);
        } catch (NumberFormatException e) {
            // Si no se ingresaron valores válidos, muestra un mensaje de error
            JOptionPane.showMessageDialog(null, "Ingreso no válido. Debe ingresar un número entero.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonConfigurarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(window_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(window_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(window_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(window_principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new window_principal().setVisible(true);

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_ejecutar;
    private javax.swing.JButton b_estad;
    private javax.swing.JButton b_limpiar;
    private javax.swing.JButton b_open_archivo;
    private javax.swing.JButton b_paso;
    private javax.swing.JButton b_salir;
    private javax.swing.JPanel background;
    private javax.swing.JButton jButtonCambiarMemorias;
    private javax.swing.JButton jButtonConfigurar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelBCPActual;
    private javax.swing.JLabel jLabelMemoriaPrincipal;
    private javax.swing.JLabel jLabelMemoriaSecundaria;
    private javax.swing.JLabel jLabelPantalla;
    private javax.swing.JLabel jLabelProgramas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private static javax.swing.JTable jTableCPU;
    private static javax.swing.JTable jTableProgramas;
    private javax.swing.JTextArea jTextAreaBCP;
    private javax.swing.JTextArea jTextAreaMemorioPrimaria;
    public javax.swing.JTextArea jTextAreaMemorioSecundaria;
    public static javax.swing.JTextArea jTextAreaPantalla;
    // End of variables declaration//GEN-END:variables

    

    public int pedirTiempodeArribo(String nombreArchivo) {
        String input = JOptionPane.showInputDialog("Ingrese el el Tiempo de Arribo para el archivo: "+nombreArchivo);
        try {
            // Intenta convertir los valores ingresados a números enteros

            int numero2 = Integer.parseInt(input);
            System.out.println("Segundo Tiempo de Arribo ingresado: " + numero2);
            return numero2;
        } catch (NumberFormatException e) {
            // Si no se ingresaron valores válidos, muestra un mensaje de error
            JOptionPane.showMessageDialog(null, "Ingreso no válido. Debe ingresar dos números enteros.", "Error", JOptionPane.ERROR_MESSAGE);
            return -1;
        }
    }

    public void agregarColumna(String nombre) {
        DefaultTableModel model = (DefaultTableModel) jTableCPU.getModel();
        model.addColumn(nombre);
    }

    public void agregarfila(String nombre, String cpu) {
        DefaultTableModel model = (DefaultTableModel) jTableCPU.getModel();
        model.addRow(new Object[]{nombre, cpu});
    }

    public void ponerX(int fila, int columna) {
        jTableCPU.setValueAt("X", fila, columna);

    }

    public void cambiarColorCelda(int fila, int columna, Color color) {
        jTableCPU.getCellRenderer(fila, columna).getTableCellRendererComponent(jTableCPU, null, false, false, fila, columna).setBackground(color);
    }

    public void setMemoriaSecundaria(String text) {
        jTextAreaMemorioSecundaria.append(text + "\n");
    }

    public void borrarMemoriaSecundaria() {
        jTextAreaMemorioSecundaria.setText("");
    }

    public void setMemoriaPrimaria(String text) {
        jTextAreaMemorioPrimaria.append(text + "\n");
    }

    public void borrarMemoriaPrimaria() {
        jTextAreaMemorioPrimaria.setText("");
    }

    public void setPantalla(String text) {
        jTextAreaPantalla.append(text + "\n");
    }

    public void borrarPantalla() {
        jTextAreaPantalla.setText("");
    }

    public void setBCP(String text) {
        jTextAreaBCP.append(text + "\n");
    }

    public void borrarBCP() {
        jTextAreaBCP.setText("");
    }

    //el numero es el numero de programa pero tambien indica la fila que va ese programa en la tabla pero restandole 1
    public static void setFilaProgramas(String nombre, String estado, int numero) {
        jTableProgramas.setValueAt(numero, numero - 1, 0);
        jTableProgramas.setValueAt(nombre, numero - 1, 1);
        jTableProgramas.setValueAt(estado, numero - 1, 2);

    }

    public static void changeCellColor(JTable table, int x, int y, Color color) {
        // Asegurarse de que x e y estén en un rango válido

        DefaultTableCellRenderer render = new DefaultTableCellRenderer();
        Component c = render.getTableCellRendererComponent(table, null, true, true, x, y);
        c.setBackground(color);
    }

    // Clase interna para el renderizador personalizado de celdas
    static class CustomCellRenderer extends DefaultTableCellRenderer {

        private Color color;

        public CustomCellRenderer(Color color) {
            this.color = color;
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            c.setBackground(color);
            return c;
        }
    }
}
